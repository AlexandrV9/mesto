(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function t(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var n=function(){function n(e,r,o,i){var u=this,a=i.handleCardClick,c=i.handleDeleteClick,l=i.handleElementButtonLikeActive;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),t(this,"isLike",(function(){return u._likes.some((function(e){return u._myId===e._id}))})),t(this,"_handleAddLikeClick",(function(e){u._numberOfElementLikes.textContent=e.likes.length,u._likes=e.likes,u._elementButtonLike.classList.remove("element__button-like_active")})),t(this,"_handleDeleteLikeClick",(function(e){u._numberOfElementLikes.textContent=e.likes.length,u._likes=e.likes,u._elementButtonLike.classList.add("element__button-like_active")})),this._name=e.name,this._link=e.link,this._likes=e.likes,this._anotherId=e.owner._id,this._cardId=e._id,this._myId=o,this._cardSelector=r,this._handleCardClick=a,this._handleDeleteClick=c,this._handleElementButtonLikeActive=l}var r,o;return r=n,(o=[{key:"_сompareOwner",value:function(){this._myId!==this._anotherId&&this._elementButtonDelete.remove()}},{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"_setEventListener",value:function(){var e=this;this._elementButtonDelete.addEventListener("click",(function(){e._handleDeleteClick(e._element)})),this._elementButtonLike.addEventListener("click",(function(){e._handleElementButtonLikeActive(e._cardId,e.isLike,e._handleAddLikeClick,e._handleDeleteLikeClick)})),this._elementImage.addEventListener("click",(function(){e._handleCardClick(e._elementTitle,e._elementImage)}))}},{key:"_handleAddStartLikeOnPage",value:function(){this.isLike()?this._elementButtonLike.classList.add("element__button-like_active"):this._elementButtonLike.classList.remove("element__button-like_active")}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._elementTitle=this._element.querySelector(".element__title"),this._elementImage=this._element.querySelector(".element__image"),this._numberOfElementLikes=this._element.querySelector(".element__number-of-likes"),this._elementButtonDelete=this._element.querySelector(".element__button-delete"),this._elementButtonLike=this._element.querySelector(".element__button-like"),this._сompareOwner(),this._setEventListener(),this._handleAddStartLikeOnPage(),this._elementImage.src=this._link,this._elementImage.alt=this._name,this._elementTitle.textContent=this._name,this._numberOfElementLikes.textContent=this._likes.length,this._element}}])&&e(r.prototype,o),n}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inputInvalidClass=t.inputInvalidClass,this._buttonInvalidClass=t.buttonInvalidClass,this._formSelector=n,this._form=document.querySelector(this._formSelector),this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputsList=this._form.querySelectorAll(this._inputSelector)}var t,n;return t=e,(n=[{key:"_showError",value:function(e){this._form.querySelector(".".concat(e.id,"-error")).textContent=e.validationMessage,e.classList.add(this._inputInvalidClass)}},{key:"_hideError",value:function(e){this._form.querySelector(".".concat(e.id,"-error")).textContent="",e.classList.remove(this._inputInvalidClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideError(e):this._showError(e)}},{key:"_setButtonState",value:function(e,t){t?(e.classList.remove(this._buttonInvalidClass),e.disabled=!1):(e.classList.add(this._buttonInvalidClass),e.disabled=!0)}},{key:"_setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(e){e.preventDefault(),console.log("отправка формы")})),this._inputsList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._setButtonState(e._submitButton,e._form.checkValidity())}))}))}},{key:"enableValidation",value:function(){this._setEventListeners(),this._setButtonState(this._submitButton,this._form.checkValidity())}},{key:"resetValidityState",value:function(){var e=this;this._inputsList.forEach((function(t){e._hideError(t)})),this._setButtonState(this._submitButton,this._form.checkValidity())}}])&&r(t.prototype,n),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._container=document.querySelector(n),this.renderer=r}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"_clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){return t.renderer(e)}))}}])&&i(t.prototype,n),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var l=function(){function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),c(this,"_handleEscClose",(function(e){e.key===r._esc&&r.close()})),c(this,"_handleClosePopupByOverlay",(function(e){e.target===e.currentTarget&&r.close()})),this._popupSelector=t,this._popup=document.querySelector(this._popupSelector),this._popupCloseButton=this._popup.querySelector(".popup__close-button"),this._textButtonSubmit=this._popup.querySelector(".popup__input-submit-button"),this._esc=n}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_visible"),document.addEventListener("keydown",this._handleEscClose),this._popup.addEventListener("click",this._handleClosePopupByOverlay)}},{key:"close",value:function(){this._popup.classList.remove("popup_visible"),document.removeEventListener("keydown",this._handleEscClose),this._popup.removeEventListener("click",this._handleClosePopupByOverlay)}},{key:"setEventListeners",value:function(){var e=this;this._popupCloseButton.addEventListener("click",(function(){e.close()}))}}])&&a(t.prototype,n),e}();function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(e,t,n){return(p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function _(e,t){return!t||"object"!==s(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return _(this,e)});function u(e,t,n,r){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(o=i.call(this,e,r))._elementInputImageNode=t,o._elementInputCaptionNode=n,o}return t=u,(n=[{key:"open",value:function(e,t){p(d(u.prototype),"open",this).call(this),this._elementInputCaptionNode.textContent=e.textContent,this._elementInputImageNode.src=t.src,this._elementInputImageNode.alt=e.textContent}},{key:"close",value:function(){p(d(u.prototype),"close",this).call(this)}}])&&f(t.prototype,n),u}(l);function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(e,t,n){return(b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function k(e,t){return(k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function S(e,t){return!t||"object"!==m(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&k(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(r);if(o){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function u(e,t,n){var r,o=t.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,e,n)).handleFormSubmit=o,r.popupForm=r._popup.querySelector(".popup__form"),r._inputList=r._popup.querySelectorAll(".popup__input"),r}return t=u,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;b(g(u.prototype),"setEventListeners",this).call(this),this._popup.addEventListener("submit",(function(t){t.preventDefault(),e.handleFormSubmit(e._getInputValues(),e._textButtonSubmit)}))}},{key:"close",value:function(){b(g(u.prototype),"close",this).call(this),this.popupForm.reset()}}])&&v(t.prototype,n),u}(l);function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var L=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameUser=document.querySelector(t.nameUserSelector),this._descriptionUser=document.querySelector(t.descriptionUserSelector)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(e,t){return e.value=this._nameUser.textContent,t.value=this._descriptionUser.textContent,{profileInputNameValue:e.value,profileInputJobValue:t.value}}},{key:"setUserInfo",value:function(e,t){this._nameUser.textContent=e.value,this._descriptionUser.textContent=t.value}}])&&E(t.prototype,n),e}();function w(e){return(w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function I(e,t,n){return(I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function P(e,t){return(P=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function j(e,t){return!t||"object"!==w(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function q(e){return(q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&P(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(r);if(o){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return j(this,e)});function u(e,t,n){var r,o=n.handleCardDelete;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,e,t))._popupDeleteButton=r._popup.querySelector(".popup__input-submit-button"),r._handleCardDelete=o,r}return t=u,(n=[{key:"open",value:function(e,t){I(q(u.prototype),"open",this).call(this),this._currentCard=e,this._IdCard=t}},{key:"setEventListeners",value:function(){var e=this;I(q(u.prototype),"setEventListeners",this).call(this),this._popupDeleteButton.addEventListener("click",(function(){e._handleCardDelete(e._IdCard,e._currentCard,e._textButtonSubmit)}))}}])&&O(t.prototype,n),u}(l);function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var x=function(){function e(t){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))},(n="_serverResponse")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._headers=t.headers,this._url=t.url}var t,n;return t=e,(n=[{key:"getAllCards",value:function(){return fetch("".concat(this._url,"cards"),{method:"GET",headers:this._headers}).then(this._serverResponse)}},{key:"getUserInfo",value:function(){return fetch("".concat(this._url,"users/me"),{method:"GET",headers:this._headers}).then(this._serverResponse)}},{key:"addCard",value:function(e){return fetch("".concat(this._url,"cards"),{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._serverResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._url,"cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._serverResponse)}},{key:"editProfile",value:function(e){return fetch("".concat(this._url,"users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._serverResponse)}},{key:"addLike",value:function(e){return fetch("".concat(this._url,"cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._serverResponse)}},{key:"deleteLike",value:function(e){return fetch("".concat(this._url,"cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._serverResponse)}},{key:"updateAvatar",value:function(e){return fetch("".concat(this._url,"users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._serverResponse)}}])&&B(t.prototype,n),e}(),T={inputSelector:".popup__input",submitButtonSelector:".popup__button",inputInvalidClass:"popup__input_state_invalid",buttonInvalidClass:"popup__button_invalid"},D="Escape",A="Сохранение...",U=document.querySelector(".profile__author"),V=document.querySelector(".profile__caption"),N=document.querySelector(".profile__avatar"),F=document.querySelector(".profile__avatar-cover"),H=document.querySelector(".profile__add-button"),J=document.querySelector(".profile__edit-button"),M=document.querySelector(".popup_type_profile"),G=M.querySelector(".popup__input_type_name"),z=M.querySelector(".popup__input_type_job"),$=document.querySelector(".popup_type_image"),K=$.querySelector(".popup__image"),Q=$.querySelector(".popup__caption"),W=document.querySelector(".popup_type_element");function X(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}W.querySelector(".popup__input_type_name"),W.querySelector(".popup__input_type_link");var Y,Z=new o(T,".popup__form_type_profile"),ee=new o(T,".popup__form_type_element"),te=new o(T,".popup__form_type_avatar"),ne=new y(".popup_type_image",K,Q,D),re=new L({nameUserSelector:".profile__author",descriptionUserSelector:".profile__caption"},G,z),oe=new x({url:"https://mesto.nomoreparties.co/v1/cohort-20/",headers:{authorization:"c11cc168-18b7-47ef-9e2e-a935593ae9b6","Content-Type":"application/json"}});Promise.all([oe.getUserInfo(),oe.getAllCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,i=void 0;try{for(var u,a=e[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==a.return||a.return()}finally{if(o)throw i}}return n}}(t,n)||function(e,t){if(e){if("string"==typeof e)return X(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?X(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];Y=o._id,U.textContent=o.name,V.textContent=o.about,N.style.backgroundImage="url(".concat(o.avatar,")"),ae.renderItems(i.reverse())})).catch((function(e){console.log("Ошибка ".concat(e))}));var ie=new R(".popup_type_confirmation-card-delete",D,{handleCardDelete:function(e,t,n){var r=ce(n,"Удаление...");oe.deleteCard(e).then((function(){t.remove(),t=""})).catch((function(e){console.log("Ошибка ".concat(e))})).finally((function(){n.textContent=r,ie.close()}))}});function ue(e){var t=new n(e,".template-card",Y,{handleCardClick:function(e,t){ne.open(e,t)},handleDeleteClick:function(t){ie.open(t,e._id)},handleElementButtonLikeActive:function(e,t,n,r){t()?oe.deleteLike(e).then((function(e){n(e)})):oe.addLike(e).then((function(e){r(e)}))}}).generateCard();ae.addItem(t)}var ae=new u({renderer:function(e){ue(e)}},".elements"),ce=function(e,t){var n=e.innerHTML;return e.textContent=t,n},le=new C(".popup_type_profile",{handleFormSubmit:function(e,t){var n=ce(t,A);oe.editProfile(e).then((function(){re.setUserInfo(G,z)})).catch((function(e){console.log("Ошибка ".concat(e))})).finally((function(){t.textContent=n,le.close()}))}},D),se=new C(".popup_type_element",{handleFormSubmit:function(e,t){var n=ce(t,A);oe.addCard(e).then((function(e){ue(e)})).catch((function(e){"Ошибка ".concat(e)})).finally((function(){t.textContent=n,se.close()}))}},D),fe=new C(".popup_type_avatar",{handleFormSubmit:function(e,t){var n=ce(t,A);oe.updateAvatar(e.link).then((function(e){N.style.backgroundImage="url(".concat(e.avatar,")")})).catch((function(e){console.log("Ошибка ".concat(e))})).finally((function(){t.textContent=n,fe.close()}))}},D);ne.setEventListeners(),se.setEventListeners(),ie.setEventListeners(),le.setEventListeners(),fe.setEventListeners(),Z.enableValidation(),ee.enableValidation(),te.enableValidation(),J.addEventListener("click",(function(){le.open(),re.getUserInfo(G,z),Z.resetValidityState()})),H.addEventListener("click",(function(){se.open(),ee.resetValidityState()})),F.addEventListener("click",(function(){fe.open(),te.resetValidityState()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,